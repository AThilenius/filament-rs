// A Material for Lit voxel data that is normal mapped. Normal mapping UVs are
// on `UV0` and Metalness/Roughness is stored in `UV1`.

material {
    name : "Voxel material",
    parameters : [
        {
           type : sampler2d,
           name : normalMap
        }
    ],
    requires : [
        // Diffuse color of the voxel (alpha will be clamped to 1.0).
        color,

        // Stores normal-map UVs.
        uv0,

        // Stores (Metallic, Roughness).
        uv1
    ],
    shadingModel : lit,
    blending : opaque
}

fragment {
    void material(inout MaterialInputs material) {
        // fetch the normal in tangent space
        vec3 normal = texture(materialParams_normalMap, getUV0()).xyz;
        material.normal = normal * 2.0 - 1.0;

        prepareMaterial(material);

        vec2 metalnessRoughness = getUV1();
        vec3 sRGB = getColor().rgb;

        // Convert sRGB to linear (cheapest version).
        vec3 linear = sRGB * sRGB;

        material.baseColor = vec4(linear, 1.0);
        material.metallic = metalnessRoughness.x;
        material.roughness = metalnessRoughness.y;
    }
}
